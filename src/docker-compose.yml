name: router_service
version: "3.9"

services:
# Serviço para fazer converter pbf -> osm
  spliter:
    container_name: SERVICE_SPLITER
    build:
      context: .
      dockerfile: Dockerfile.python
    volumes:
      - data-osm:/app/OSMs
    env_file:
      - .env
    command: >
      bash -c "rm -rf osm2pgrouting &&
                git clone https://github.com/pgRouting/osm2pgrouting.git && 
                mkdir temp && 
                cp ./osm2pgrouting/*.xml temp &&
                rm -rf osm2pgrouting &&
                mv temp osm2pgrouting &&
                su && apt update && apt list --upgradable && apt -f install && dpkg --configure -a && apt-get install osmium-tool &&
                ls &&
                chmod +x ./Modules/OSMTools/bin/osmconvert64 &&
                python main_download.py"
  # Serviço para subir o banco de dados do psotgis
  pgrouting:
    container_name: PGROUTING_DB
    image: postgis/postgis:16-3.4
    build:
      context: .
      dockerfile: Dockerfile.postgis
    ports:
      - "7533:5432" # direcianado para a porta externa
    volumes:
      - db-data:/var/lib/postgresql/data
    depends_on:
      - spliter
    env_file: # usnado vairaveis de ambiente
      - .env
    restart: always # Garante que o banco de dados sempre ficará online
    networks:
      - pgrouting_network

  updater:
    container_name: PGROUTING_UP_GRAPH
    image: pgrouting/pgrouting:0.1
    build:
      context: .
      dockerfile: Dockerfile.python
    deploy: # Limitando o uso de memoria
      resources:
        limits:
          memory: 9g
    volumes:
      - data-osm:/app/OSMs
    depends_on:
      - spliter
      - pgrouting
    command: >
       bash -c "su && apt update && apt list --upgradable && apt -f install && dpkg --configure -a && apt-get install osmium-tool && python main_postgis.py"
    networks:
      - pgrouting_network

#Volumes utilizados
volumes:
  db-data:
  data-osm:
    driver: local

networks:
  pgrouting_network:
    driver: bridge
